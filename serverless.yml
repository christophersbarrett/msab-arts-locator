service: msab-arts-locator

plugins:
  - fullstack-serverless
  - serverless-stack-output

custom:
  domain: ${opt:stage}.${env.DOMAIN_NAME}
  region: ${opt:region, 'us-east-2'}
  certificateId: ${env:CERTIFICATE_ID} # Required by AWS to be in us-east-1

  output:
    file: .serverless/stack.json

  fullstack:
    domain: ${self:custom.domain}
    certificate: 
      Fn::Join: 
        - ""
        - - "arn:aws:acm:"
          - "us-east-1"
          - ":"
          - "Ref": "AWS::AccountId"
          - ":certificate/"
          - "${self:custom.certificateId}"
    bucketName: "${self:custom.region}"
    distributionFolder: client/dist            # Path to the client assets to be uploaded to S3
    indexDocument: index.html                  # The index document to use
    errorDocument: error.html                  # The error document to use
    singlePageApp: true                        # If true 403 errors will be rerouted (missing assets) to your root index document to support single page apps like React and Angular where the js framework handles routing
    compressWebContent: true                   # Use compression when serving web content
    apiPath: api                               # The path prefix for your API Gateway lambdas. The path for the lambda http event trigger needs to start with this too eg. api/myMethod 
    clientCommand: npm i && npm run build && cp -v error.html dist/
    clientSrcPath: client                      # The path to where you want to run the clientCommand
    # logging:
    #   bucket: "${self:custom.region}-${self:custom.domain}-logs"
    #   prefix: logs
    minimumProtocolVersion: TLSv1.2_2018
    priceClass: PriceClass_100

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, 'dev'}
  region: ${self:custom.region}

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          path: ${self:custom.fullstack.apiPath}/v1/hello
          method: get

resources:
  Outputs:
    FullstackDomain:
      Value: ${self:custom.domain}
